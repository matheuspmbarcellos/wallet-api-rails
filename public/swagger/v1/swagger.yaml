openapi: 3.0.1
info:
  title: Wallet API
  version: 'v1'
  description: API for managing users, wallets, and cards.
paths:
  /login:
    post:
      summary: Authenticate the user
      description: Logs in with email and password, returning a JWT token.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User authenticated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Invalid credentials

  /users:
    post:
      summary: Create a new user
      description: Creates a new user in the application.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cpf:
                  type: string
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  message:
                    type: string
        '422':
          description: Error creating the user

  /users/{id}:
    get:
      summary: Retrieve user details
      description: Returns information about the authenticated user.
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User information
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  cpf:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
        '401':
          description: Unauthorized

    put:
      summary: Update the user
      description: Updates the authenticated user's information.
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cpf:
                  type: string
                name:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: User updated successfully
        '401':
          description: Unauthorized
        '422':
          description: Error updating the user

  /wallets/{id}:
    get:
      summary: Display wallet information
      description: Returns information about the authenticated user's wallet.
      tags:
        - Wallets
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Wallet information
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  credit_available:
                    type: number
        '404':
          description: Wallet not found

  /wallets/{id}/limit:
    patch:
      summary: Update custom wallet limit
      description: Sets a new custom limit for the wallet.
      tags:
        - Wallets
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                custom_limit:
                  type: number
      responses:
        '200':
          description: Limit updated successfully
        '422':
          description: Error updating the limit

  /wallets/{id}/purchase:
    patch:
      summary: Make a purchase
      description: Makes a purchase using the available balance in the wallet.
      tags:
        - Wallets
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
      responses:
        '200':
          description: Purchase made successfully
        '422':
          description: Error making the purchase

  /wallets/{wallet_id}/cards:
    get:
      summary: List all cards in the wallet
      description: Returns all cards associated with the user's wallet.
      tags:
        - Cards
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of cards
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name_printed:
                      type: string
                    card_limit:
                      type: number

    post:
      summary: Create a new card
      description: Creates a new card associated with the wallet.
      tags:
        - Cards
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                name_printed:
                  type: string
                expiration_month:
                  type: integer
                expiration_year:
                  type: integer
                cvv:
                  type: string
                card_limit:
                  type: number
      responses:
        '201':
          description: Card created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name_printed:
                    type: string
                  card_limit:
                    type: number
        '422':
          description: Error creating the card

  /wallets/{wallet_id}/cards/{id}:
    get:
      summary: Display card information
      description: Returns details of a specific card.
      tags:
        - Cards
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: integer
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Card information
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name_printed:
                    type: string
                  card_limit:
                    type: number
        '404':
          description: Card not found

    delete:
      summary: Delete a card
      description: Deletes a card from the wallet, provided there are no pending bills.
      tags:
        - Cards
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: integer
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Card deleted successfully
        '422':
          description: Error deleting the card
          
  /wallets/{wallet_id}/cards/{id}/pay:
    patch:
      summary: Pay card bill
      description: Pays a bill releasing credit on the card.
      tags:
        - Cards
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: integer
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
      responses:
        '200':
          description: Bill paid successfully
        '422':
          description: Error paying the bill


components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []
